@page "/contact"
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JSRuntime

<h1>문의하기</h1>

<div class="contact-container">
    <section class="contact-info">
        <h2>연락처 정보</h2>
        <p><strong>주소:</strong> [회사 주소]</p>
        <p><strong>전화:</strong> [회사 전화번호]</p>
        <p><strong>이메일:</strong> [회사 이메일]</p>
        <p><strong>영업 시간:</strong> [영업 시간, 예: 월-금 9:00 - 18:00]</p>
    </section>

    <section class="contact-form">
        <h2>문의 양식</h2>
        <EditForm Model="@contactForm" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">이름:</label>
                <InputText id="name" class="form-control" @bind-Value="contactForm.Name" />
                <ValidationMessage For="@(() => contactForm.Name)" />
            </div>

            <div class="form-group">
                <label for="email">이메일:</label>
                <InputText id="email" class="form-control" @bind-Value="contactForm.Email" />
                <ValidationMessage For="@(() => contactForm.Email)" />
            </div>

            <div class="form-group">
                <label for="subject">제목:</label>
                <InputText id="subject" class="form-control" @bind-Value="contactForm.Subject" />
                <ValidationMessage For="@(() => contactForm.Subject)" />
            </div>

            <div class="form-group">
                <label for="message">메시지:</label>
                <InputTextArea id="message" class="form-control" @bind-Value="contactForm.Message" rows="5" />
                <ValidationMessage For="@(() => contactForm.Message)" />
            </div>

            <button type="submit" class="btn btn-primary">보내기</button>
        </EditForm>
    </section>
</div>

<section class="map">
    <h2>찾아오시는 길</h2>
    <div id="map" style="height: 400px; width: 100%;"></div>
</section>

@code {
    private ContactFormModel contactForm = new ContactFormModel();

    private class ContactFormModel
    {
        [Required(ErrorMessage = "이름을 입력해주세요.")]
        public string Name { get; set; }

        [Required(ErrorMessage = "이메일을 입력해주세요.")]
        [EmailAddress(ErrorMessage = "유효한 이메일 주소를 입력해주세요.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "제목을 입력해주세요.")]
        public string Subject { get; set; }

        [Required(ErrorMessage = "메시지를 입력해주세요.")]
        public string Message { get; set; }
    }

    private async Task HandleValidSubmit()
    {
        // 여기에 폼 제출 로직을 구현합니다 (예: 이메일 전송, 데이터베이스 저장 등)
        await JSRuntime.InvokeVoidAsync("alert", "문의가 성공적으로 전송되었습니다. 감사합니다!");
        contactForm = new ContactFormModel(); // 폼 초기화
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Google Maps API를 사용하여 지도를 초기화합니다.
            // 실제 구현시에는 API 키와 회사의 실제 위치 좌표를 사용해야 합니다.
            await JSRuntime.InvokeVoidAsync("initMap");
        }
    }
}

<style>
    .contact-container {
        display: flex;
        justify-content: space-between;
        margin-bottom: 2rem;
    }

    .contact-info, .contact-form {
        flex: 1;
        padding: 1rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }
</style>

@* 지도 초기화를 위한 JavaScript 함수 *@
<script>
    window.initMap = function() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -34.397, lng: 150.644}, // 예시 좌표, 실제 회사 위치로 변경 필요
            zoom: 8
        });
    }
</script>

@* Google Maps API 스크립트 로드 (실제 사용시 API 키 필요) *@
<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap" async defer></script>