@page "/"
@using Microsoft.AspNetCore.Components.Web
@using WEBB.Components
@using WEBB.Data
@using WEBB.Models
@inject ProductService ProductService

<PageTitle>HANSolution Home</PageTitle>

<HeadContent>
    <link href="css/pages/index.css" rel="stylesheet" />
</HeadContent>

<div class="hero-section">
    <div class="hero-content">
        <h1>Smart Sensor Technologies</h1>
        <Banner />
    </div>
</div>

<div class="white-section">
</div>

<div class="blue-section">
    <div class="container">
        <div class="section-container">
            <div class="section si-section">
                <div class="section-header">
                    <h2>S/I</h2>
                    <button class="more-btn">More &gt;</button>
                </div>
                <div class="section-content">
                    <div class="button-group" role="tablist">
                        @foreach (var option in new[] { "MachineVision", "AutomaticControl" })
                        {
                            <button class="content-btn @(siActiveButton == option ? "active" : "")"
                                    @onclick="() => ToggleSIContent(option)"
                                    role="tab"
                                    aria-selected="@(siActiveButton == option)"
                                    id="@($"tab-{option}")"
                                    aria-controls="@($"panel-{option}")">
                                @(option == "MachineVision" ? "Machine Vision" : "Automatic Control")
                            </button>
                        }
                    </div>
                    <div class="content-images">
                        @foreach (var product in ProductService.GetTopProducts("S/I", siActiveButton))
                        {
                            <div class="content-item">
                                <img src="@product.ImageUrl" alt="@product.Title">
                            <h3>@product.ShortTitle</h3>
                            <p>@product.ShortContent</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="section components-section">
                <div class="section-header">
                    <h2>Components</h2>
                    <button class="more-btn">More &gt;</button>
                </div>
                <div class="section-content">
                    <div class="button-group" role="tablist">
                        @foreach (var option in new[] { "MachineVision", "Sensors" })
                        {
                            <button class="content-btn @(componentsActiveButton == option ? "active" : "")"
                                    @onclick="() => ToggleComponentsContent(option)"
                                    role="tab"
                                    aria-selected="@(componentsActiveButton == option)"
                                    id="@($"tab-components-{option}")"
                                    aria-controls="@($"panel-components-{option}")">
                                @option
                            </button>
                        }
                    </div>
                    <div class="content-images">
                        @foreach (var product in ProductService.GetTopProducts("Components", componentsActiveButton))
                        {
                            <div class="content-item">
                                <img src="@product.ImageUrl" alt="@product.Title">
                                <h3>@product.ShortTitle</h3>
                                <p>@product.ShortContent</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string siActiveButton = "MachineVision";
    private string componentsActiveButton = "MachineVision";

    private void ToggleSIContent(string button)
    {
        siActiveButton = button;
    }

    private void ToggleComponentsContent(string button)
    {
        componentsActiveButton = button;
    }
}